/* tslint:disable */
/* eslint-disable */
/**
 * SUT SA Example API
 * This is a sample server for SUT SE 2563
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ControllersUser
 */
export interface ControllersUser {
    /**
     * 
     * @type {number}
     * @memberof ControllersUser
     */
    branch?: number;
    /**
     * 
     * @type {number}
     * @memberof ControllersUser
     */
    building?: number;
    /**
     * 
     * @type {number}
     * @memberof ControllersUser
     */
    faculty?: number;
    /**
     * 
     * @type {string}
     * @memberof ControllersUser
     */
    personalID?: string;
    /**
     * 
     * @type {string}
     * @memberof ControllersUser
     */
    personalName?: string;
    /**
     * 
     * @type {number}
     * @memberof ControllersUser
     */
    room?: number;
}

export function ControllersUserFromJSON(json: any): ControllersUser {
    return ControllersUserFromJSONTyped(json, false);
}

export function ControllersUserFromJSONTyped(json: any, ignoreDiscriminator: boolean): ControllersUser {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'branch': !exists(json, 'branch') ? undefined : json['branch'],
        'building': !exists(json, 'building') ? undefined : json['building'],
        'faculty': !exists(json, 'faculty') ? undefined : json['faculty'],
        'personalID': !exists(json, 'personalID') ? undefined : json['personalID'],
        'personalName': !exists(json, 'personalName') ? undefined : json['personalName'],
        'room': !exists(json, 'room') ? undefined : json['room'],
    };
}

export function ControllersUserToJSON(value?: ControllersUser | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'branch': value.branch,
        'building': value.building,
        'faculty': value.faculty,
        'personalID': value.personalID,
        'personalName': value.personalName,
        'room': value.room,
    };
}


